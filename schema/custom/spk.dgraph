# SPK Token Custom Schema Extensions
# Note: This file is for generic SPK-related types that might be shared
# Network-specific SPK predicates should go in networks/spkccT.dgraph

# Generic SPK Storage Contract type that could be used by multiple networks
type SPKStorageContract {
  SPKStorageContract.id
  SPKStorageContract.creator
  SPKStorageContract.fileSet
  SPKStorageContract.totalSize
  SPKStorageContract.duration
  SPKStorageContract.powerRequired
  SPKStorageContract.brocaPaid
  SPKStorageContract.status
  SPKStorageContract.providers
  SPKStorageContract.expiry
}

# Generic Encrypted File type
type SPKEncryptedFile {
  SPKEncryptedFile.cid
  SPKEncryptedFile.owner
  SPKEncryptedFile.size
  SPKEncryptedFile.encryptionType
  SPKEncryptedFile.sharedWith
  SPKEncryptedFile.created
}

# Predicates for generic SPK types
SPKStorageContract.id: string @index(hash) .
SPKStorageContract.creator: string @index(hash) .
SPKStorageContract.fileSet: string @index(hash) .
SPKStorageContract.totalSize: int .
SPKStorageContract.duration: int .
SPKStorageContract.powerRequired: string .
SPKStorageContract.brocaPaid: string .
SPKStorageContract.status: string @index(hash) .
SPKStorageContract.providers: [uid] .
SPKStorageContract.expiry: datetime @index(hour) .

SPKEncryptedFile.cid: string @index(hash) .
SPKEncryptedFile.owner: string @index(hash) .
SPKEncryptedFile.size: int .
SPKEncryptedFile.encryptionType: string .
SPKEncryptedFile.sharedWith: [string] .
SPKEncryptedFile.created: datetime .