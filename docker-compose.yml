version: '3.8'

services:
  dgraph-zero:
    image: dgraph/dgraph:latest
    container_name: honeygraph-zero
    volumes:
      - ./data/zero:/dgraph
    # Internal port only - no external exposure needed
    expose:
      - "5080"
      - "6080"
    command: dgraph zero --my=dgraph-zero:5080
    restart: unless-stopped
    networks:
      - honeygraph

  dgraph-alpha:
    image: dgraph/dgraph:latest
    container_name: honeygraph-alpha
    volumes:
      - ./data/alpha:/dgraph
      - ./schema:/schema
    # Internal ports only - accessed via honeygraph-api
    expose:
      - "8080"
      - "9080"
    command: dgraph alpha --my=dgraph-alpha:7080 --zero=dgraph-zero:5080 --security whitelist=0.0.0.0/0
    restart: unless-stopped
    depends_on:
      - dgraph-zero
    networks:
      - honeygraph

  dgraph-ratel:
    image: dgraph/ratel:latest
    container_name: honeygraph-ratel
    # Internal only - Dgraph UI not exposed externally
    expose:
      - "8000"
    restart: unless-stopped
    networks:
      - honeygraph

  redis:
    image: redis:7-alpine
    container_name: honeygraph-redis
    # Internal only - accessed via honeygraph-api
    expose:
      - "6379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - honeygraph

  honeygraph-api:
    build: .
    container_name: honeygraph-api
    ports:
      - "3030:3030"
    environment:
      - NODE_ENV=production
      - DGRAPH_URL=http://dgraph-alpha:9080
      - API_PORT=3030
      - JWT_SECRET=${JWT_SECRET:-change-me-in-production}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REQUIRE_HIVE_AUTH=true
      - AUTHORIZED_HONEYCOMB_NODES=testnode1,spknode,honeycomb-test
    volumes:
      - ./logs:/app/logs
    depends_on:
      - dgraph-alpha
      - redis
    restart: unless-stopped
    networks:
      - honeygraph
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: >
      sh -c "
        echo 'Waiting for Dgraph to be ready...' &&
        for i in 1 2 3 4 5 6 7 8 9 10; do
          if curl -f http://dgraph-alpha:8080/health 2>/dev/null; then
            echo 'Dgraph is ready!' &&
            break
          else
            echo 'Dgraph not ready, waiting 5 seconds...' &&
            sleep 5
          fi
        done &&
        echo 'Initializing schema...' &&
        node /app/scripts/init-schema.js || echo 'Schema init failed, continuing anyway...' &&
        echo 'Starting API server...' &&
        npm start
      "

networks:
  honeygraph:
    driver: bridge