version: '3.8'

services:
  dgraph-zero:
    image: dgraph/dgraph:latest
    container_name: honeygraph-zero
    volumes:
      - ./data/zero:/dgraph
    networks:
      - honeygraph
    command: dgraph zero --my=dgraph-zero:5080
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  dgraph-alpha:
    image: dgraph/dgraph:latest
    container_name: honeygraph-alpha
    volumes:
      - ./data/alpha:/dgraph
      - ./schema:/schema
    networks:
      - honeygraph
    command: dgraph alpha --my=dgraph-alpha:7080 --zero=dgraph-zero:5080 --security whitelist=0.0.0.0/0
    restart: unless-stopped
    depends_on:
      - dgraph-zero
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dgraph.rule=Host(`${DGRAPH_SUBDOMAIN:-dgraph}.${DOMAIN}`)"
      - "traefik.http.routers.dgraph.tls=true"
      - "traefik.http.routers.dgraph.tls.certresolver=letsencrypt"
      - "traefik.http.services.dgraph.loadbalancer.server.port=8080"

  dgraph-ratel:
    image: dgraph/ratel:latest
    container_name: honeygraph-ratel
    networks:
      - honeygraph
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ratel.rule=Host(`${RATEL_SUBDOMAIN:-ratel}.${DOMAIN}`)"
      - "traefik.http.routers.ratel.tls=true"
      - "traefik.http.routers.ratel.tls.certresolver=letsencrypt"
      - "traefik.http.services.ratel.loadbalancer.server.port=8000"

  redis:
    image: redis:7-alpine
    container_name: honeygraph-redis
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - honeygraph
    labels:
      - "traefik.enable=false"

  honeygraph-api:
    build: .
    container_name: honeygraph-api
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DGRAPH_URL=${DGRAPH_URL:-http://dgraph-alpha:9080}
      - API_PORT=${API_PORT:-3030}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - DOMAIN=${DOMAIN}
      - API_URL=${API_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - REQUIRE_HIVE_AUTH=${REQUIRE_HIVE_AUTH:-true}
      - AUTHORIZED_HONEYCOMB_NODES=${AUTHORIZED_HONEYCOMB_NODES}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    volumes:
      - ./logs:/app/logs
      - ${DATA_PATH:-./data/honeygraph}:/app/data
    depends_on:
      - dgraph-alpha
      - redis
    restart: unless-stopped
    networks:
      - honeygraph
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_SUBDOMAIN:-api}.${DOMAIN}`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=3030"
      # WebSocket support
      - "traefik.http.routers.api-ws.rule=Host(`${API_SUBDOMAIN:-api}.${DOMAIN}`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.api-ws.tls=true"
      - "traefik.http.routers.api-ws.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.api-ws.headers.customrequestheaders.X-Forwarded-Proto=https"

  # Optional: Traefik for automatic SSL
  traefik:
    image: traefik:v2.10
    container_name: honeygraph-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@${DOMAIN}}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - honeygraph
    restart: unless-stopped

networks:
  honeygraph:
    driver: bridge