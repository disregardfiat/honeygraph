# Nginx configuration for Honeygraph
# Replace honeygraph.example.com with your actual domain

upstream honeygraph_api {
    server localhost:3030;
}

upstream dgraph_alpha {
    server localhost:9080;
}

upstream dgraph_ratel {
    server localhost:8100;
}

# Main Honeygraph API
server {
    listen 80;
    listen [::]:80;
    server_name honeygraph.example.com;

    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name honeygraph.example.com;

    # SSL configuration (update paths to your certificates)
    ssl_certificate /etc/letsencrypt/live/honeygraph.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/honeygraph.example.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Logging
    access_log /var/log/nginx/honeygraph_access.log;
    error_log /var/log/nginx/honeygraph_error.log;

    # WebSocket support
    location /ws {
        proxy_pass http://honeygraph_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }

    # Main API
    location / {
        proxy_pass http://honeygraph_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers (if needed)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Request size limits
    client_max_body_size 50M;
    client_body_buffer_size 128k;
}

# Dgraph Alpha (GraphQL endpoint)
server {
    listen 80;
    listen [::]:80;
    server_name dgraph.honeygraph.example.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dgraph.honeygraph.example.com;

    ssl_certificate /etc/letsencrypt/live/honeygraph.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/honeygraph.example.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://dgraph_alpha;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Dgraph Ratel (UI)
server {
    listen 80;
    listen [::]:80;
    server_name ratel.honeygraph.example.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ratel.honeygraph.example.com;

    ssl_certificate /etc/letsencrypt/live/honeygraph.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/honeygraph.example.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://dgraph_ratel;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}